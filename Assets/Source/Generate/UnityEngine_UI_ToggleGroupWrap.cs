//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_UI_ToggleGroupWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.UI.ToggleGroup), typeof(UnityEngine.EventSystems.UIBehaviour));
		L.RegFunction("NotifyToggleOn", NotifyToggleOn);
		L.RegFunction("UnregisterToggle", UnregisterToggle);
		L.RegFunction("RegisterToggle", RegisterToggle);
		L.RegFunction("EnsureValidState", EnsureValidState);
		L.RegFunction("AnyTogglesOn", AnyTogglesOn);
		L.RegFunction("ActiveToggles", ActiveToggles);
		L.RegFunction("GetFirstActiveToggle", GetFirstActiveToggle);
		L.RegFunction("SetAllTogglesOff", SetAllTogglesOff);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("allowSwitchOff", get_allowSwitchOff, set_allowSwitchOff);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int NotifyToggleOn(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.UI.ToggleGroup obj = (UnityEngine.UI.ToggleGroup)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.ToggleGroup));
				UnityEngine.UI.Toggle arg0 = (UnityEngine.UI.Toggle)ToLua.CheckObject(L, 2, typeof(UnityEngine.UI.Toggle));
				obj.NotifyToggleOn(arg0);
				return 0;
			}
			else if (count == 3)
			{
				UnityEngine.UI.ToggleGroup obj = (UnityEngine.UI.ToggleGroup)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.ToggleGroup));
				UnityEngine.UI.Toggle arg0 = (UnityEngine.UI.Toggle)ToLua.CheckObject(L, 2, typeof(UnityEngine.UI.Toggle));
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				obj.NotifyToggleOn(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.UI.ToggleGroup.NotifyToggleOn");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnregisterToggle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.UI.ToggleGroup obj = (UnityEngine.UI.ToggleGroup)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.ToggleGroup));
			UnityEngine.UI.Toggle arg0 = (UnityEngine.UI.Toggle)ToLua.CheckObject(L, 2, typeof(UnityEngine.UI.Toggle));
			obj.UnregisterToggle(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterToggle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.UI.ToggleGroup obj = (UnityEngine.UI.ToggleGroup)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.ToggleGroup));
			UnityEngine.UI.Toggle arg0 = (UnityEngine.UI.Toggle)ToLua.CheckObject(L, 2, typeof(UnityEngine.UI.Toggle));
			obj.RegisterToggle(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnsureValidState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.UI.ToggleGroup obj = (UnityEngine.UI.ToggleGroup)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.ToggleGroup));
			obj.EnsureValidState();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AnyTogglesOn(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.UI.ToggleGroup obj = (UnityEngine.UI.ToggleGroup)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.ToggleGroup));
			bool o = obj.AnyTogglesOn();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ActiveToggles(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.UI.ToggleGroup obj = (UnityEngine.UI.ToggleGroup)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.ToggleGroup));
			System.Collections.Generic.IEnumerable<UnityEngine.UI.Toggle> o = obj.ActiveToggles();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFirstActiveToggle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.UI.ToggleGroup obj = (UnityEngine.UI.ToggleGroup)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.ToggleGroup));
			UnityEngine.UI.Toggle o = obj.GetFirstActiveToggle();
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAllTogglesOff(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				UnityEngine.UI.ToggleGroup obj = (UnityEngine.UI.ToggleGroup)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.ToggleGroup));
				obj.SetAllTogglesOff();
				return 0;
			}
			else if (count == 2)
			{
				UnityEngine.UI.ToggleGroup obj = (UnityEngine.UI.ToggleGroup)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.ToggleGroup));
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				obj.SetAllTogglesOff(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.UI.ToggleGroup.SetAllTogglesOff");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_allowSwitchOff(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UI.ToggleGroup obj = (UnityEngine.UI.ToggleGroup)o;
			bool ret = obj.allowSwitchOff;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allowSwitchOff on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_allowSwitchOff(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UI.ToggleGroup obj = (UnityEngine.UI.ToggleGroup)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.allowSwitchOff = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allowSwitchOff on a nil value");
		}
	}
}

