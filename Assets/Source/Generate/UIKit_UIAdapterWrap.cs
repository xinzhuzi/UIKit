//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIKit_UIAdapterWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UIKit.UIAdapter), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("AddAdapter", AddAdapter);
		L.RegFunction("RemoveAdapter", RemoveAdapter);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddAdapter(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<UnityEngine.RectTransform>(L, 2))
			{
				UIKit.UIAdapter obj = (UIKit.UIAdapter)ToLua.CheckObject(L, 1, typeof(UIKit.UIAdapter));
				UnityEngine.RectTransform arg0 = (UnityEngine.RectTransform)ToLua.ToObject(L, 2);
				obj.AddAdapter(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<UnityEngine.GameObject>(L, 2))
			{
				UIKit.UIAdapter obj = (UIKit.UIAdapter)ToLua.CheckObject(L, 1, typeof(UIKit.UIAdapter));
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.ToObject(L, 2);
				obj.AddAdapter(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UIKit.UIAdapter.AddAdapter");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAdapter(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<UnityEngine.RectTransform>(L, 2))
			{
				UIKit.UIAdapter obj = (UIKit.UIAdapter)ToLua.CheckObject(L, 1, typeof(UIKit.UIAdapter));
				UnityEngine.RectTransform arg0 = (UnityEngine.RectTransform)ToLua.ToObject(L, 2);
				obj.RemoveAdapter(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<UnityEngine.GameObject>(L, 2))
			{
				UIKit.UIAdapter obj = (UIKit.UIAdapter)ToLua.CheckObject(L, 1, typeof(UIKit.UIAdapter));
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.ToObject(L, 2);
				obj.RemoveAdapter(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UIKit.UIAdapter.RemoveAdapter");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

